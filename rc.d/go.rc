# GO
# export GO111MODULE=auto
# export GOROOT="${HOME}/Miduo/go1.19.12"
# export GOPATH="${HOME}/go"
# 
# export PATH="${PATH}:${GOROOT}/bin:${GOPATH}/bin"

export GOPROXY="https://goproxy.cn,direct"
# export GOPRIVATE="" #指向私有仓库

unalias g 2> /dev/null || true

if [ -x "${HOME}/.g/bin/g" ]; then
    export PATH="${HOME}/.g/bin:$PATH"
fi

export G_MIRROR=https://mirrors.aliyun.com/golang/
export GO_HOME="${HOME}/.g/versions"
export GO_ENVS="${HOME}/goenvs"

if [ ! -d "$GO_ENVS" ]; then
    mkdir "$GO_ENVS"
fi

_update_go() {
    local GO_VERSION_PATH="$HOME/.g/versions"
    local GO_BIN_PATH="$HOME/.g/bin"
    local BIN_FILE
    local go_version

    for i in $GO_VERSION_PATH/*; do
        if [ ! -d "$i" ]; then
            continue
        fi
        go_version=$(basename "$i")
        BIN_FILE="$GO_BIN_PATH/go$go_version"
        if [ -x "$BIN_FILE" ]; then
            continue
        fi
        if [ ! -d "$HOME/goenvs/$go_version" ]; then
            mkdir -p "$HOME/goenvs/$go_version"
        fi

        cat << EOF > "$BIN_FILE"
#/bin/bash
go_version=$go_version

export GOPATH="/Users/dingtianwei/goenvs/\${go_version}:/Users/dingtianwei/go"
export GOROOT="/Users/dingtianwei/.g/versions/\${go_version}"
export PATH="/Users/dingtianwei/goenvs/\${go_version}/bin:/Users/dingtianwei/go/bin:\${PATH}"
exec "\${HOME}/.g/versions/\${go_version}/bin/go" "\$@"

EOF

        chmod +x "$BIN_FILE"
    done

}

g.env(){
    local SET_GO_VERSION; SET_GO_VERSION=$1
    case "$SET_GO_VERSION" in
        "ls"|"l"|"ls-remote"|"lr"|"lsr"|"use"|"install"|"i"|"uninstall"|"clean"|"env"|"self"|"help"|"h")
            ${HOME}/.g/bin/g "$@"
            return
            ;;
        "--help"|"-h"|"--version"|"-v")
            ${HOME}/.g/bin/g "$@"
            return
            ;;
        "--update")
            _update_go
            return
            ;;
    esac

    local SET_GOROOT="${GO_HOME}/$SET_GO_VERSION"
    local SET_GOPATH="${GO_ENVS}/${SET_GO_VERSION}:${HOME}/go"

    if [ ! -d "$SET_GOROOT" ]; then
        echo "${SET_GOROOT} not found"
        return
    fi


    if [ -n "${GOROOT}" ]; then
        PATH=$(echo $PATH | /usr/bin/sed 's#'${GOROOT}'/bin#'${SET_GOROOT}'/bin#')
    else
        PATH="${SET_GOROOT}/bin:$PATH"
    fi

    if [ -n "${GOPATH}" ]; then
        PATH=$(echo $PATH | /usr/bin/sed 's#'${GOPATH%%:*}'/bin#'${SET_GOPATH%%:*}'/bin#')
    else
        PATH="${SET_GOPATH%%:*}/bin:${HOME}/go/bin:$PATH"
    fi
    if [ ! -d "${SET_GOPATH%%:*}" ]; then
        mkdir -p  "${SET_GOPATH%%:*}"
    fi

    export GOROOT="$SET_GOROOT"
    export GOPATH="$SET_GOPATH"
    g use "$SET_GO_VERSION"
}


if [ -n "$GO_VERSION" ]; then
    g.env "$GO_VERSION" > /dev/null
fi

